name: Deploy Node.js Backend

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Run Tests
        run: npm test

  security-scan:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Java (Required for OWASP Dependency Check)
        run: sudo apt-get install -y openjdk-17-jdk unzip

      - name: Install .NET 6.0 SDK (Required for Dependency-Check)
        run: |
          sudo apt-get update
          sudo apt-get install -y apt-transport-https ca-certificates software-properties-common
          wget https://packages.microsoft.com/config/ubuntu/22.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
          sudo dpkg -i packages-microsoft-prod.deb
          sudo apt-get update
          sudo apt-get install -y dotnet-sdk-6.0
          dotnet --version


      - name: Install .NET 6.0 SDK (Required for Dependency-Check)
        run: |
          sudo apt-get update
          sudo apt-get install -y dotnet-sdk-6.0
          dotnet --version

      - name: Install OWASP Dependency-Check
        run: |
          mkdir -p dependency-check
          curl -sLO https://github.com/jeremylong/DependencyCheck/releases/download/v8.4.2/dependency-check-8.4.2-release.zip
          unzip -o dependency-check-8.4.2-release.zip -d dependency-check
          chmod +x dependency-check/dependency-check/bin/dependency-check.sh

      - name: Clear Old Dependency Check Data (If Exists)
        run: rm -rf dependency-check/data

      - name: Run OWASP Dependency Check
        run: |
          dependency-check/dependency-check/bin/dependency-check.sh \
            --project "NodeJS Backend" \
            --scan . \
            --format "HTML" \
            --out reports

      - name: Upload Dependency Check Report
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: reports
  deploy:
    needs: security-scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Deploy to AWS EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.AWS_EC2_IP }}
          username: ec2-user
          key: ${{ secrets.AWS_SSH_PRIVATE_KEY }}
          script: |
            echo "Stopping existing service..."
            sudo systemctl stop cbt-backend || echo "Service not running, continuing..."

            echo "Cloning/updating repository..."
            if [ ! -d "/home/ec2-user/CBT-Backend" ]; then
              git clone https://github.com/Bhavin2301/CBT-Backend.git /home/ec2-user/CBT-Backend
            fi
            cd /home/ec2-user/CBT-Backend

            echo "Resetting and pulling latest changes..."
            git reset --hard
            git pull origin main

            echo "Installing dependencies..."
            npm install

            echo "Checking for build script..."
            if grep -q '"build"' package.json; then
              npm run build
            else
              echo "No build script found, skipping..."
            fi

            echo "Verifying systemd service file..."
            if [ ! -f "/etc/systemd/system/cbt-backend.service" ]; then
              echo "ERROR: Systemd service file missing. Please create it manually."
              exit 1
            fi

            echo "Reloading systemd and starting service..."
            sudo systemctl daemon-reload
            sudo systemctl start cbt-backend
            sudo systemctl enable cbt-backend

            echo "Deployment completed successfully!"

name: Deploy Node.js Backend

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Run Tests
        run: npm test

  security-scan:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Java (Required for OWASP Dependency Check)
        run: sudo apt-get install -y openjdk-17-jdk unzip

      - name: Install OWASP Dependency-Check
        run: |
          mkdir -p dependency-check
          curl -sLO https://github.com/jeremylong/DependencyCheck/releases/download/v8.4.2/dependency-check-8.4.2-release.zip
          unzip -o dependency-check-8.4.2-release.zip -d dependency-check
          chmod +x dependency-check/dependency-check/bin/dependency-check.sh

      - name: Run OWASP Dependency Check
        run: |
          dependency-check/dependency-check/bin/dependency-check.sh \
            --project "NodeJS Backend" \
            --scan . \
            --format "HTML" \
            --out reports

      - name: Upload Dependency Check Report
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: reports

  docker-build-push:
    needs: security-scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Docker
        run: sudo apt-get update && sudo apt-get install -y docker.io

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/cbt-backend:latest .

      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/cbt-backend:latest

  deploy:
    needs: docker-build-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to AWS EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.AWS_EC2_IP }}
          username: ec2-user
          key: ${{ secrets.AWS_SSH_PRIVATE_KEY }}
          script: |
            echo "Stopping existing container (if running)..."
            docker stop cbt-backend || true
            docker rm cbt-backend || true
            
            echo "Pulling latest image..."
            docker pull ${{ secrets.DOCKER_USERNAME }}/cbt-backend:latest

            echo "Running new container..."
            docker run -d --name cbt-backend -p 3000:3000 \
              --restart always \
              -e NODE_ENV=production \
              ${{ secrets.DOCKER_USERNAME }}/cbt-backend:latest

            echo "Deployment completed successfully!"
